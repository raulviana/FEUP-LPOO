import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class EndGame {
    private int ready = 0;

    private JFrame frame;
    private JPanel panel1;
    private JButton closeGameButton;
    private JList list1;

    public EndGame(GameStatus gameStatus, Arena arena) {
        setupGUI(gameStatus, arena);

        closeGameButton.addActionListener(actionEvent -> ready = 1);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @param gameStatus
     * @param arena
     * @noinspection ALL
     */
    private void setupGUI(GameStatus gameStatus, Arena arena) {
        frame = new JFrame("Eternal Defense");
        frame.setLayout(new BoxLayout(frame.getContentPane(), BoxLayout.Y_AXIS));

        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(5, 25, 5, 25), -1, -1, true, true));
        final JLabel label1 = new JLabel();
        label1.setText("Eternal Defense");
        final JLabel label2 = new JLabel();
        label2.setText("Jogo criado por José Rodrigues e Raul Viana");
        final JLabel label3 = new JLabel();
        if (gameStatus.equals(GameStatus.GAME_WON)) label3.setText("YOU WON");
        else label3.setText("YOU LOST");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel1.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel1.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        closeGameButton = new JButton();
        closeGameButton.setHorizontalTextPosition(0);
        closeGameButton.setText("Close Game");
        panel1.add(closeGameButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
        panel1.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Game info"));
        list1 = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("Nome: " + arena.getPlayer().getName());
        defaultListModel1.addElement("Balanço final: " + arena.getPlayer().getBalance() + "$");
        defaultListModel1.addElement("Dificuldade: " + arena.getSettings().getDifficulty());
        defaultListModel1.addElement("Ronda máxima: Ronda " + arena.getSettings().getRound().ordinal());
        defaultListModel1.addElement("Geração máxima: " + arena.getGeneration());
        list1.setModel(defaultListModel1);
        panel2.add(list1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));

        frame.getContentPane().add(panel1);
        frame.getContentPane().add(panel2);
        frame.pack();
        frame.setVisible(true);
    }

    public void awaitStart() throws InterruptedException {
        while (ready == 0) {
            frame.validate();
            Thread.sleep(200);
        }
        frame.setVisible(false);
        return;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 1, new Insets(5, 5, 5, 5), -1, -1, true, true));
        final JLabel label1 = new JLabel();
        label1.setText("Eternal Defense");
        label1.setToolTipText("Criado por José Rodrigues e Raul Viana");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        closeGameButton = new JButton();
        closeGameButton.setHorizontalTextPosition(0);
        closeGameButton.setText("Close Game");
        panel1.add(closeGameButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
        panel1.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        list1 = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("Nome:");
        defaultListModel1.addElement("Balanço final:");
        defaultListModel1.addElement("Ronda máxima:");
        defaultListModel1.addElement("Geração máxima:");
        list1.setModel(defaultListModel1);
        panel2.add(list1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
